#include <stdio.h>
#include <stdlib.h>
#include <string.h>
int lexicographic_sort(const char* a, const char* b) {
    return strcmp(a,b);

}

int lexicographic_sort_reverse(const char* a, const char* b) {
    return strcmp(b,a);

}

int sort_by_number_of_distinct_characters(const char* a, const char* b) {
    int c1=strlen(a);
    int c2=strlen(b);
    int arr[26]={0};
    int arr2[26]={0};
    int st1=0,st2=0;
    for(int i=0;i<c1;i++){
        if(!arr[(a[i]-'a')]++){
            st1+=1;
        }
    }
        for(int i=0;i<c2;i++){
        if(!arr2[(b[i]-'a')]++){
            st2+=1;
        }}
        if(st1==st2){
            return lexicographic_sort(a,b);
            
        }
    
    return st1-st2;
    
}

int sort_by_length(const char* a, const char* b) {
    int c1=strlen(a);
    int c2=strlen(b);
    if(c1==c2){
        return lexicographic_sort(a,b);
        
    }
    return c1-c2;
}

void string_sort(char** arr,const int len,int (*cmp_func)(const char* a, const char* b)){
    char* temp;
    for(int i=0;i<len;i++){
        
        for(int j=i;j>0;j--){
            if((cmp_func(arr[j],arr[j-1]))<0){
                temp=malloc((strlen(arr[j])+1)* sizeof(char));       
                strcpy(temp,arr[j]);
                arr[j]=realloc(arr[j], strlen(arr[j-1])+1);
                strcpy(arr[j],arr[j-1]);
                arr[j-1]=realloc(arr[j-1], strlen(temp)+1);
                strcpy(arr[j-1],temp);
            }
            // char temp[3000]={0};
        }
    }
    

}


int main() 
{
    int n;
    scanf("%d", &n);
  
    char** arr;
	arr = (char**)malloc(n * sizeof(char*));
  
    for(int i = 0; i < n; i++){
        *(arr + i) = malloc(1024 * sizeof(char));
        scanf("%s", *(arr + i));
        *(arr + i) = realloc(*(arr + i), strlen(*(arr + i)) + 1);
    }
  
    string_sort(arr, n, lexicographic_sort);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);
    printf("\n");

    string_sort(arr, n, lexicographic_sort_reverse);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");

    string_sort(arr, n, sort_by_length);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]);    
    printf("\n");

    string_sort(arr, n, sort_by_number_of_distinct_characters);
    for(int i = 0; i < n; i++)
        printf("%s\n", arr[i]); 
    printf("\n");
}
